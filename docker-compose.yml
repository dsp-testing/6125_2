services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - wanted_network
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 20s
      retries: 4
    restart: always

  postgres:
    image: postgres:14.1-alpine
    hostname: 'db'
    container_name: 'db'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
    networks:
      - wanted_network
    restart: always

  companies:
    image: companies
    build:
      context: .
      dockerfile: src/Wanted.WebApi.Companies/Dockerfile
    environment:
      - EnvironmentName=Development
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__DefaultConnection=Host=db;Database=wanted;Username=postgres;Password=postgres;"
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '5174:8080'
      - '7038:8081'
    networks:
      - wanted_network
    restart: always

  employees:
    image: employees
    build:
      context: .
      dockerfile: src/Wanted.WebApi.Employees/Dockerfile
    environment:
      - EnvironmentName=Development
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '5173:8080'
      - '7037:8081'
    networks:
      - wanted_network
    restart: always

networks:
  wanted_network:
    driver: bridge
